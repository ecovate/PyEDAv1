on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        required: true
        default: 'infra-test'
        description: |
          üõë DO NOT CHANGE THE DROPDOWN ABOVE FOR THE WORKFLOW. KEEP IT ON "main" BRANCH.
          --------------------------------------
          ‚¨áÔ∏è Environment.
        type: choice
      action:
        required: true
        default: 'stop-service'
        description: |
          ‚¨áÔ∏è action.
        type: choice
        options:
          - start-service
          - stop-service
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      releaseVersion: ${{ github.event.inputs.action }}
  start-service:
    if: github.event.inputs.action == 'start-service'
    runs-on: ubuntu-latest
    steps:
      - name: 'start-service'
        run: |
          echo "aws ecs start-task --task-definition massgov-pfml-${{ github.event.inputs.taskdefinition }} --cluster massgov-pfml-${{ github.event.inputs.cluster }}"
      - name: 'start-rds'
        run: |
          echo "aws rds start-db-instance --db-instance-identifier massgov-pfml-${{ github.event.inputs.environment }}"
  stop-service:
    if: github.event.inputs.action == 'stop-service'
    runs-on: ubuntu-latest
    steps:
      - name: 'stop service'
        run: |
          echo "aws ecs stop-task --task-definition massgov-pfml-${{ github.event.inputs.taskdefinition }} --cluster massgov-pfml-${{ github.event.inputs.cluster }}"
      - name: 'stop rds'
        run: |
          echo "aws rds stop-db-instance --db-instance-identifier massgov-pfml-${{ github.event.inputs.environment }}"
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
